{"version":3,"sources":["components/footer/footer.jsx","components/todo-input/todo-input.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","containers/todo/todo.jsx","actions/actionCreator.js","constans.js","components/title/title.jsx","App.js","serviceWorker.js","reducers/tasks.js","store.js","reducers/filter.js","reducers/index.js","index.js"],"names":["FILTERS_BTN","text","id","Footer","amount","activeFilter","changeFilter","className","map","onClick","key","defaultProps","ToDoInput","value","onChange","onKeyPress","placeholder","defaultTypes","ToDoItem","isCompleted","removeTask","completeTask","ToDoList","tasksList","ToDo","state","taskText","handleInputChange","target","setState","addTaskOnClick","length","props","Date","getTime","addTaskOnPress","filterTask","tasks","filter","task","getActiveTask","this","isTasksExist","filteredTasks","counter","React","Component","connect","type","Title","title","App","Boolean","window","location","hostname","match","TASKS","load","namespace","preloadedState","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c713c48.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './footer.css';\n\nconst FILTERS_BTN = [\n{\n\ttext:'All',\n\tid: 'all',\n},\n{\n\ttext:\"Active\",\n\tid:'active',\n},\n{\n\ttext:'Completed',\n\tid:'completed',\n}\n];\n\nconst Footer = ({amount, activeFilter, changeFilter}) => (\n\t<div className=\"footer\">\n\t\t\t<span className=\"amount\">{`${amount} left`}</span>\n\t\t<div className=\"btn-group\">\n\t\t{FILTERS_BTN.map(({text,id}) => (\n\t\t\t<button  onClick={() => {changeFilter(id)}}\n\t\t\t\t\t key={id} \n\t\t\t\t\tclassName={id === activeFilter? 'filter-btn active' : 'filter-btn'}>\n\t\t\t\t{text}\n\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t</div>\n);\n\n\nFooter.propTypes = {\n  amount: PropTypes.number,\n  activeFilter: PropTypes.string,\n  changeFilter: PropTypes.func,\n}\n\nFooter.defaultProps = {\n  amount: 0,\n  activeFilter: 'all',\n  changeFilter: () => {},\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-input.css';\n\n\nconst ToDoInput = ({value, onChange, onKeyPress, onClick}) => (\n\n\t<div className='todo-input-wrapper'>\n\t\t<i className=\"fas fa-plus\"\n\t\t\tonClick={onClick}\n\t\t/>\n\t\t<input\n\t\t\tclassName='todo-input'\n\t\t\tplaceholder='Add new task'\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tonKeyPress={onKeyPress}/>\n\t</div>\n);\n\nToDoInput.propTypes ={\n\tonChange: PropTypes.func,\n\tvalue: PropTypes.string,\n\tonKeyPress:PropTypes.func,\n\tonClick:PropTypes.func,\n}\n\nToDoInput.defaultTypes ={\n\tonChange:() => {},\n\tvalue:'',\n\tonKeyPress:()=>{},\n\tonClick: () => {},\n}\n\nexport default ToDoInput;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './todo-item.css';\n\n\n\nconst ToDoItem = ({text, isCompleted, removeTask,completeTask, id}) => (\n\t<li className='todo-item'>\n\t\t<i onClick={()=> completeTask(id)}className={isCompleted? 'mark far fa-check-circle': 'mark far fa-circle'}/>\n\t\t\t<span className={isCompleted? 'completed text':'text'}>{text}</span>\n\t\t<i onClick={()=> removeTask(id)} className='fas fa-times'/>\n\t\t</li>\n);\n\nToDoItem.propTypes ={\n\ttext: PropTypes.string,\n\tisCompleted: PropTypes.bool,\n\tcompleteTask:PropTypes.func,\n\tremoveTask: PropTypes.func,\n\tid: PropTypes.number,\n\n}\n\nToDoItem.defaultTypes ={\n\ttext:'',\n\tisCompleted: false,\n\tremoveTask: () => {},\n\tcompleteTask: () => {},\n\tid:0,\n}\n\nexport default ToDoItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ToDoItem from '../todo-item/todo-item';\n\nimport './todo-list.css';\n\nconst ToDoList = ({ tasksList,removeTask,completeTask }) => (\n  <ul className=\"todo-list\">\n    {tasksList.map(({ id, text, isCompleted }) => (\n      <ToDoItem  removeTask={removeTask} completeTask={completeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = {\n  tasksList: PropTypes.array,\n  removeTask:PropTypes.func,\n  completeTask:PropTypes.func,\n}\n\nToDoList.defaultProps = {\n  tasksList: [],\n  removeTask: ()=>{},\n  completeTask: ()=>{},\n}\n\nexport default ToDoList;","import React from 'react';\nimport './todo.css';\n\nimport { addTaskOnPress,addTaskOnClick, removeTask, completeTask,changeFilter } from '../../actions/actionCreator';\nimport { connect } from 'react-redux';\nimport Footer from '../../components/footer/footer';\nimport ToDoInput from '../../components/todo-input/todo-input';\nimport ToDoList from '../../components/todo-list/todo-list';\n\n\n\nclass ToDo extends React.Component {\n\tstate = {\n\t\ttaskText:'',\n\t}\n\thandleInputChange = ({target: {value} }) => {\n\t\tthis.setState({\n\t\t\ttaskText:value,\n\t\t})\n\t}\n\n\taddTaskOnClick = () => {\n\t\t  const { taskText } = this.state;\n\t\t  if (taskText.length > 3) {\n\t\t\tconst {addTaskOnClick} = this.props;\n\t\taddTaskOnClick((new Date()).getTime(), taskText, false);\n\t\t\n\t\tthis.setState({\n\t\t\ttaskText:'',\n\t\t\t\t})\n\t}}\n\n\n\taddTaskOnPress = ({key}) => {\n\t\t  const { taskText } = this.state;\n\n\t\tif (taskText.length > 3 && key === 'Enter') {\n\t\t\tconst {addTaskOnPress} = this.props;\n\n\t\taddTaskOnPress((new Date()).getTime(), taskText, false);\n\t\t\n\t\tthis.setState({\n\t\t\ttaskText:'',\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\tfilterTask = (tasks,activeFilter) => {\n\t\tswitch(activeFilter){\n\t\t\tcase 'completed':\n\t\t\t\treturn tasks.filter(task => task.isCompleted);\n\t\t\tcase 'active':\n\t\t\t\treturn tasks.filter(task => !task.isCompleted);\n\t\t\tdefault:\n\t\t\treturn tasks;\n\t\t}\n\t}\n\tgetActiveTask = tasks => tasks.filter(task =>!task.isCompleted).length;\n\n\trender(){\n\n\t\n\tconst { taskText} = this.state;\n\tconst { tasks, removeTask, completeTask, filter, changeFilter } = this.props;\n\tconst isTasksExist = tasks && tasks.length > 0;\n\tconst filteredTasks = this.filterTask(tasks, filter);\n\tconst counter = this.getActiveTask(tasks);\n\t\treturn(\n\t\t\t<div className=\"todo-wrapper\">\n\t\t\t\t<ToDoInput onClick={this.addTaskOnClick} onKeyPress={this.addTaskOnPress} onChange={this.handleInputChange} value={taskText}/>\n\t\t\t\t{isTasksExist && <ToDoList tasksList={filteredTasks} removeTask={removeTask} completeTask={completeTask}/>}\n\t\t\t\t{isTasksExist && <Footer changeFilter={changeFilter} amount={counter} activeFilter={filter}/>}\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\n\nexport default connect(({tasks, filter }) => ({\n\ttasks,\n\tfilter,\n}),{addTaskOnPress,addTaskOnClick, removeTask,completeTask, changeFilter})(ToDo);","import { ADD_TASK, REMOVE_TASK, СOMPLETE_TASK, FILTER_TASK } from '../constans';\r\n\r\nexport const addTaskOnClick = (id, text, isCompleted) => ({\r\n\ttype: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted\r\n});\r\n\r\n\r\nexport const addTaskOnPress = (id, text, isCompleted) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted\r\n});\r\n\r\nexport const removeTask = id => ({\r\n  type: REMOVE_TASK,\r\n  id\r\n});\r\n\r\nexport const completeTask = id => ({\r\n  type: СOMPLETE_TASK,\r\n  id\r\n});\r\n\r\nexport const changeFilter = activeFilter => ({\r\n  type: FILTER_TASK,\r\n  activeFilter,\r\n})","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const СOMPLETE_TASK = 'СOMPLETE_TASK';\r\nexport const FILTER_TASK = 'FILTER_TASK';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './title.css'\n\nconst Title = ({title}) => (\n\n\t<div>\n\t\t<h1 className='title'>{title}</h1>\n\t</div>\n\n\t);\n\nTitle.propTypes = {\n\ttitle:PropTypes.string,\n}\n\nTitle.defaultTypes ={\n\ttitle: 'Simple title',\n}\n\n\nexport default Title;","import React, { Fragment } from 'react';\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\nconst App =()=>(\n  <Fragment>\n    <Title title=\"ToDo App\" />\n    <ToDo />\n  </Fragment>\n  )\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TASK, REMOVE_TASK, СOMPLETE_TASK} from '../constans';\r\nimport { load } from 'redux-localstorage-simple';\r\n\r\nlet TASKS = load({namespace:'todo-list'});\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length){\r\n\tTASKS = {\r\n\t\ttasks: []\r\n\t}\r\n}\r\n\r\n// const TASKS = [{\r\n\r\n// \tid: 1,\r\n// \ttext: 'Learn React.js',\r\n// \tisCompleted:true,\r\n// },\r\n// {\r\n\r\n// \tid: 2,\r\n// \ttext: 'Learn React Router',\r\n// \tisCompleted:false,\r\n// },\r\n// {\r\n\r\n// \tid: 3,\r\n// \ttext: 'Learn React Redux',\r\n// \tisCompleted:false,\r\n// },\r\n// {\r\n\r\n// \tid: 4,\r\n// \ttext: 'Wash dishes',\r\n// \tisCompleted:false,\r\n// },\r\n// {\r\n\r\n// \tid: 5,\r\n// \ttext: 'Make a bed',\r\n// \tisCompleted:true,\r\n// }];\r\n\r\nconst tasks =(state = TASKS.tasks, { id,text,isCompleted, type }) => {\r\n\tswitch(type) {\r\n\t\tcase ADD_TASK:\r\n\t\t\treturn [\r\n\t\t\t\t...state, {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\tisCompleted,\r\n\t\t\t\t}];\r\n\t\tcase REMOVE_TASK:\r\n\t\t\treturn [...state].filter(task=>task.id !== id);\r\n\t\tcase СOMPLETE_TASK:\r\n\t\t\treturn [...state].map(task=>{\r\n\t\t\t\tif(task.id === id){\r\n\t\t\t\ttask.isCompleted =!task.isCompleted;\r\n\t\t\t}\r\n\t\t\treturn task;\r\n\t\t})\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t}\r\n\r\n}\r\nexport default tasks;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n    \tapplyMiddleware(save({ namespace:'todo-list' }))\r\n    \t),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { FILTER_TASK } from '../constans';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n  switch (type) {\r\n    case FILTER_TASK:\r\n      return activeFilter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default filter;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks'\r\nimport filter from './filter'\r\n\r\nconst rootReducer = combineReducers({tasks, filter});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n\t\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}